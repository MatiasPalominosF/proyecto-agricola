{"ast":null,"code":"import _classCallCheck from \"C:/Users/matia/Desktop/Proyecto/proyecto-agricola/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/matia/Desktop/Proyecto/proyecto-agricola/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { from } from 'rxjs';\nimport { fromDocRef } from '../observable/fromRef';\nimport { map, observeOn } from 'rxjs/operators';\nimport { associateQuery } from '../firestore';\nimport { AngularFirestoreCollection } from '../collection/collection';\nexport var AngularFirestoreDocument = /*#__PURE__*/function () {\n  function AngularFirestoreDocument(ref, afs) {\n    _classCallCheck(this, AngularFirestoreDocument);\n\n    this.ref = ref;\n    this.afs = afs;\n  }\n\n  _createClass(AngularFirestoreDocument, [{\n    key: \"set\",\n    value: function set(data, options) {\n      return this.ref.set(data, options);\n    }\n  }, {\n    key: \"update\",\n    value: function update(data) {\n      return this.ref.update(data);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      return this.ref.delete();\n    }\n  }, {\n    key: \"collection\",\n    value: function collection(path, queryFn) {\n      var collectionRef = this.ref.collection(path);\n\n      var _associateQuery = associateQuery(collectionRef, queryFn),\n          ref = _associateQuery.ref,\n          query = _associateQuery.query;\n\n      return new AngularFirestoreCollection(ref, query, this.afs);\n    }\n  }, {\n    key: \"snapshotChanges\",\n    value: function snapshotChanges() {\n      var scheduledFromDocRef$ = fromDocRef(this.ref, this.afs.schedulers.outsideAngular);\n      return scheduledFromDocRef$.pipe(this.afs.keepUnstableUntilFirst);\n    }\n  }, {\n    key: \"valueChanges\",\n    value: function valueChanges() {\n      return this.snapshotChanges().pipe(map(function (action) {\n        return action.payload.data();\n      }));\n    }\n  }, {\n    key: \"get\",\n    value: function get(options) {\n      return from(this.ref.get(options)).pipe(observeOn(this.afs.schedulers.insideAngular));\n    }\n  }]);\n\n  return AngularFirestoreDocument;\n}(); //# sourceMappingURL=document.js.map","map":{"version":3,"sources":["C:/Users/matia/Desktop/Proyecto/proyecto-agricola/node_modules/@angular/fire/firestore/es2015/document/document.js"],"names":["from","fromDocRef","map","observeOn","associateQuery","AngularFirestoreCollection","AngularFirestoreDocument","ref","afs","data","options","set","update","delete","path","queryFn","collectionRef","collection","query","scheduledFromDocRef$","schedulers","outsideAngular","pipe","keepUnstableUntilFirst","snapshotChanges","action","payload","get","insideAngular"],"mappings":";;AAAA,SAASA,IAAT,QAAqB,MAArB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,gBAA/B;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,0BAAT,QAA2C,0BAA3C;AACA,WAAaC,wBAAb;AACI,oCAAYC,GAAZ,EAAiBC,GAAjB,EAAsB;AAAA;;AAClB,SAAKD,GAAL,GAAWA,GAAX;AACA,SAAKC,GAAL,GAAWA,GAAX;AACH;;AAJL;AAAA;AAAA,WAKI,aAAIC,IAAJ,EAAUC,OAAV,EAAmB;AACf,aAAO,KAAKH,GAAL,CAASI,GAAT,CAAaF,IAAb,EAAmBC,OAAnB,CAAP;AACH;AAPL;AAAA;AAAA,WAQI,gBAAOD,IAAP,EAAa;AACT,aAAO,KAAKF,GAAL,CAASK,MAAT,CAAgBH,IAAhB,CAAP;AACH;AAVL;AAAA;AAAA,WAWI,mBAAS;AACL,aAAO,KAAKF,GAAL,CAASM,MAAT,EAAP;AACH;AAbL;AAAA;AAAA,WAcI,oBAAWC,IAAX,EAAiBC,OAAjB,EAA0B;AACtB,UAAMC,aAAa,GAAG,KAAKT,GAAL,CAASU,UAAT,CAAoBH,IAApB,CAAtB;;AACA,4BAAuBV,cAAc,CAACY,aAAD,EAAgBD,OAAhB,CAArC;AAAA,UAAQR,GAAR,mBAAQA,GAAR;AAAA,UAAaW,KAAb,mBAAaA,KAAb;;AACA,aAAO,IAAIb,0BAAJ,CAA+BE,GAA/B,EAAoCW,KAApC,EAA2C,KAAKV,GAAhD,CAAP;AACH;AAlBL;AAAA;AAAA,WAmBI,2BAAkB;AACd,UAAMW,oBAAoB,GAAGlB,UAAU,CAAC,KAAKM,GAAN,EAAW,KAAKC,GAAL,CAASY,UAAT,CAAoBC,cAA/B,CAAvC;AACA,aAAOF,oBAAoB,CAACG,IAArB,CAA0B,KAAKd,GAAL,CAASe,sBAAnC,CAAP;AACH;AAtBL;AAAA;AAAA,WAuBI,wBAAe;AACX,aAAO,KAAKC,eAAL,GAAuBF,IAAvB,CAA4BpB,GAAG,CAAC,UAAAuB,MAAM,EAAI;AAC7C,eAAOA,MAAM,CAACC,OAAP,CAAejB,IAAf,EAAP;AACH,OAFqC,CAA/B,CAAP;AAGH;AA3BL;AAAA;AAAA,WA4BI,aAAIC,OAAJ,EAAa;AACT,aAAOV,IAAI,CAAC,KAAKO,GAAL,CAASoB,GAAT,CAAajB,OAAb,CAAD,CAAJ,CAA4BY,IAA5B,CAAiCnB,SAAS,CAAC,KAAKK,GAAL,CAASY,UAAT,CAAoBQ,aAArB,CAA1C,CAAP;AACH;AA9BL;;AAAA;AAAA,I,CAgCA","sourcesContent":["import { from } from 'rxjs';\nimport { fromDocRef } from '../observable/fromRef';\nimport { map, observeOn } from 'rxjs/operators';\nimport { associateQuery } from '../firestore';\nimport { AngularFirestoreCollection } from '../collection/collection';\nexport class AngularFirestoreDocument {\n    constructor(ref, afs) {\n        this.ref = ref;\n        this.afs = afs;\n    }\n    set(data, options) {\n        return this.ref.set(data, options);\n    }\n    update(data) {\n        return this.ref.update(data);\n    }\n    delete() {\n        return this.ref.delete();\n    }\n    collection(path, queryFn) {\n        const collectionRef = this.ref.collection(path);\n        const { ref, query } = associateQuery(collectionRef, queryFn);\n        return new AngularFirestoreCollection(ref, query, this.afs);\n    }\n    snapshotChanges() {\n        const scheduledFromDocRef$ = fromDocRef(this.ref, this.afs.schedulers.outsideAngular);\n        return scheduledFromDocRef$.pipe(this.afs.keepUnstableUntilFirst);\n    }\n    valueChanges() {\n        return this.snapshotChanges().pipe(map(action => {\n            return action.payload.data();\n        }));\n    }\n    get(options) {\n        return from(this.ref.get(options)).pipe(observeOn(this.afs.schedulers.insideAngular));\n    }\n}\n//# sourceMappingURL=document.js.map"]},"metadata":{},"sourceType":"module"}