{"ast":null,"code":"import _classCallCheck from \"C:/Users/matia/Desktop/Proyecto/proyecto-agricola/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/matia/Desktop/Proyecto/proyecto-agricola/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Router, NavigationStart, NavigationError, NavigationEnd, NavigationCancel } from '@angular/router';\nimport { LoadingBarModule, LoadingBarService } from '@ngx-loading-bar/core';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/router';\nimport * as ɵngcc2 from '@ngx-loading-bar/core';\n\nvar LoadingBarRouterModule = /*#__PURE__*/function () {\n  /**\n   * @param {?} router\n   * @param {?} loadingBar\n   */\n  function LoadingBarRouterModule(router, loadingBar) {\n    var _this = this;\n\n    _classCallCheck(this, LoadingBarRouterModule);\n\n    router.events.subscribe(function (event) {\n      /** @type {?} */\n      var state = _this.getCurrentNavigationState(router);\n\n      if (state && state.ignoreLoadingBar) {\n        return;\n      }\n\n      if (event instanceof NavigationStart) {\n        loadingBar.start();\n      }\n\n      if (event instanceof NavigationError || event instanceof NavigationEnd || event instanceof NavigationCancel) {\n        loadingBar.complete();\n      }\n    });\n  }\n  /**\n   * @private\n   * @param {?} router\n   * @return {?}\n   */\n\n\n  _createClass(LoadingBarRouterModule, [{\n    key: \"getCurrentNavigationState\",\n    value: function getCurrentNavigationState(router) {\n      // `getCurrentNavigation` only available in angular `7.2`\n\n      /** @type {?} */\n      var currentNavigation = router.getCurrentNavigation && router.getCurrentNavigation();\n\n      if (currentNavigation && currentNavigation.extras) {\n        return currentNavigation.extras.state;\n      }\n\n      return {};\n    }\n  }]);\n\n  return LoadingBarRouterModule;\n}();\n\nLoadingBarRouterModule.ɵfac = function LoadingBarRouterModule_Factory(t) {\n  return new (t || LoadingBarRouterModule)(ɵngcc0.ɵɵinject(ɵngcc1.Router), ɵngcc0.ɵɵinject(ɵngcc2.LoadingBarService));\n};\n\nLoadingBarRouterModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: LoadingBarRouterModule\n});\nLoadingBarRouterModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [[RouterModule, LoadingBarModule], RouterModule, LoadingBarModule]\n});\n/** @nocollapse */\n\nLoadingBarRouterModule.ctorParameters = function () {\n  return [{\n    type: Router\n  }, {\n    type: LoadingBarService\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoadingBarRouterModule, [{\n    type: NgModule,\n    args: [{\n      imports: [RouterModule, LoadingBarModule],\n      exports: [RouterModule, LoadingBarModule]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.Router\n    }, {\n      type: ɵngcc2.LoadingBarService\n    }];\n  }, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LoadingBarRouterModule, {\n    imports: function imports() {\n      return [RouterModule, LoadingBarModule];\n    },\n    exports: function exports() {\n      return [RouterModule, LoadingBarModule];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { LoadingBarRouterModule }; //# sourceMappingURL=ngx-loading-bar-router.js.map","map":{"version":3,"sources":["C:/Users/matia/Desktop/Proyecto/proyecto-agricola/node_modules/@ngx-loading-bar/router/fesm2015/ngx-loading-bar-router.js"],"names":["NgModule","RouterModule","Router","NavigationStart","NavigationError","NavigationEnd","NavigationCancel","LoadingBarModule","LoadingBarService","ɵngcc0","ɵngcc1","ɵngcc2","LoadingBarRouterModule","router","loadingBar","events","subscribe","event","state","getCurrentNavigationState","ignoreLoadingBar","start","complete","currentNavigation","getCurrentNavigation","extras","ɵfac","LoadingBarRouterModule_Factory","t","ɵɵinject","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","imports","ctorParameters","ngDevMode","ɵsetClassMetadata","args","exports","ngJitMode","ɵɵsetNgModuleScope"],"mappings":"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","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Router, NavigationStart, NavigationError, NavigationEnd, NavigationCancel } from '@angular/router';\nimport { LoadingBarModule, LoadingBarService } from '@ngx-loading-bar/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/router';\nimport * as ɵngcc2 from '@ngx-loading-bar/core';\nclass LoadingBarRouterModule {\n    /**\n     * @param {?} router\n     * @param {?} loadingBar\n     */\n    constructor(router, loadingBar) {\n        router.events.subscribe(event => {\n            /** @type {?} */\n            const state = this.getCurrentNavigationState(router);\n            if (state && state.ignoreLoadingBar) {\n                return;\n            }\n            if (event instanceof NavigationStart) {\n                loadingBar.start();\n            }\n            if ((event instanceof NavigationError || event instanceof NavigationEnd || event instanceof NavigationCancel)) {\n                loadingBar.complete();\n            }\n        });\n    }\n    /**\n     * @private\n     * @param {?} router\n     * @return {?}\n     */\n    getCurrentNavigationState(router) {\n        // `getCurrentNavigation` only available in angular `7.2`\n        /** @type {?} */\n        const currentNavigation = router.getCurrentNavigation && router.getCurrentNavigation();\n        if (currentNavigation && currentNavigation.extras) {\n            return currentNavigation.extras.state;\n        }\n        return {};\n    }\n}\nLoadingBarRouterModule.ɵfac = function LoadingBarRouterModule_Factory(t) { return new (t || LoadingBarRouterModule)(ɵngcc0.ɵɵinject(ɵngcc1.Router), ɵngcc0.ɵɵinject(ɵngcc2.LoadingBarService)); };\nLoadingBarRouterModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: LoadingBarRouterModule });\nLoadingBarRouterModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            RouterModule,\n            LoadingBarModule,\n        ], RouterModule,\n        LoadingBarModule] });\n/** @nocollapse */\nLoadingBarRouterModule.ctorParameters = () => [\n    { type: Router },\n    { type: LoadingBarService }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LoadingBarRouterModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    RouterModule,\n                    LoadingBarModule,\n                ],\n                exports: [\n                    RouterModule,\n                    LoadingBarModule,\n                ]\n            }]\n    }], function () { return [{ type: ɵngcc1.Router }, { type: ɵngcc2.LoadingBarService }]; }, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LoadingBarRouterModule, { imports: function () { return [RouterModule,\n        LoadingBarModule]; }, exports: function () { return [RouterModule,\n        LoadingBarModule]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { LoadingBarRouterModule };\n\n//# sourceMappingURL=ngx-loading-bar-router.js.map"]},"metadata":{},"sourceType":"module"}