{"ast":null,"code":"import _toConsumableArray from \"C:/Users/matia/Desktop/Proyecto/proyecto-agricola/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:/Users/matia/Desktop/Proyecto/proyecto-agricola/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/matia/Desktop/Proyecto/proyecto-agricola/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { InjectionToken } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { Observable, queueScheduler, asyncScheduler } from 'rxjs';\nimport { subscribeOn, observeOn, tap } from 'rxjs/operators';\nexport var RealtimeDatabaseURL = new InjectionToken('angularfire2.realtimeDatabaseURL');\nexport var DATABASE_URL = RealtimeDatabaseURL;\n\nfunction noop() {}\n\nexport var ɵZoneScheduler = /*#__PURE__*/function () {\n  function ɵZoneScheduler(zone) {\n    var delegate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : queueScheduler;\n\n    _classCallCheck(this, ɵZoneScheduler);\n\n    this.zone = zone;\n    this.delegate = delegate;\n  }\n\n  _createClass(ɵZoneScheduler, [{\n    key: \"now\",\n    value: function now() {\n      return this.delegate.now();\n    }\n  }, {\n    key: \"schedule\",\n    value: function schedule(work, delay, state) {\n      var targetZone = this.zone;\n\n      var workInZone = function workInZone(state) {\n        var _this = this;\n\n        targetZone.runGuarded(function () {\n          work.apply(_this, [state]);\n        });\n      };\n\n      return this.delegate.schedule(workInZone, delay, state);\n    }\n  }]);\n\n  return ɵZoneScheduler;\n}();\nexport var ɵBlockUntilFirstOperator = /*#__PURE__*/function () {\n  function ɵBlockUntilFirstOperator(zone) {\n    _classCallCheck(this, ɵBlockUntilFirstOperator);\n\n    this.zone = zone;\n    this.task = null;\n  }\n\n  _createClass(ɵBlockUntilFirstOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      var unscheduleTask = this.unscheduleTask.bind(this);\n      this.task = this.zone.run(function () {\n        return Zone.current.scheduleMacroTask('firebaseZoneBlock', noop, {}, noop, noop);\n      });\n      return source.pipe(tap(unscheduleTask, unscheduleTask, unscheduleTask)).subscribe(subscriber).add(unscheduleTask);\n    }\n  }, {\n    key: \"unscheduleTask\",\n    value: function unscheduleTask() {\n      if (this.task != null && this.task.state === 'scheduled') {\n        this.task.invoke();\n        this.task = null;\n      }\n    }\n  }]);\n\n  return ɵBlockUntilFirstOperator;\n}();\nexport var ɵAngularFireSchedulers = function ɵAngularFireSchedulers(ngZone) {\n  _classCallCheck(this, ɵAngularFireSchedulers);\n\n  this.ngZone = ngZone;\n  this.outsideAngular = ngZone.runOutsideAngular(function () {\n    return new ɵZoneScheduler(Zone.current);\n  });\n  this.insideAngular = ngZone.run(function () {\n    return new ɵZoneScheduler(Zone.current, asyncScheduler);\n  });\n};\nexport function ɵkeepUnstableUntilFirstFactory(schedulers, platformId) {\n  return function keepUnstableUntilFirst(obs$) {\n    if (isPlatformServer(platformId)) {\n      obs$ = obs$.lift(new ɵBlockUntilFirstOperator(schedulers.ngZone));\n    }\n\n    return obs$.pipe(subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular));\n  };\n}\nexport var runOutsideAngular = function runOutsideAngular(zone) {\n  return function (obs$) {\n    return new Observable(function (subscriber) {\n      return zone.runOutsideAngular(function () {\n        runInZone(zone)(obs$).subscribe(subscriber);\n      });\n    });\n  };\n};\nexport var runInZone = function runInZone(zone) {\n  return function (obs$) {\n    return new Observable(function (subscriber) {\n      return obs$.subscribe(function (value) {\n        return zone.run(function () {\n          return subscriber.next(value);\n        });\n      }, function (error) {\n        return zone.run(function () {\n          return subscriber.error(error);\n        });\n      }, function () {\n        return zone.run(function () {\n          return subscriber.complete();\n        });\n      });\n    });\n  };\n};\nexport var FirebaseZoneScheduler = /*#__PURE__*/function () {\n  function FirebaseZoneScheduler(zone, platformId) {\n    _classCallCheck(this, FirebaseZoneScheduler);\n\n    this.zone = zone;\n    this.platformId = platformId;\n  }\n\n  _createClass(FirebaseZoneScheduler, [{\n    key: \"schedule\",\n    value: function schedule() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return this.zone.runGuarded(function () {\n        return queueScheduler.schedule.apply(queueScheduler, args);\n      });\n    }\n  }, {\n    key: \"keepUnstableUntilFirst\",\n    value: function keepUnstableUntilFirst(obs$) {\n      if (isPlatformServer(this.platformId)) {\n        return new Observable(function (subscriber) {\n          var noop = function noop() {};\n\n          var task = Zone.current.scheduleMacroTask('firebaseZoneBlock', noop, {}, noop, noop);\n          obs$.subscribe(function (next) {\n            if (task.state === 'scheduled') {\n              task.invoke();\n            }\n\n            ;\n            subscriber.next(next);\n          }, function (error) {\n            if (task.state === 'scheduled') {\n              task.invoke();\n            }\n\n            subscriber.error(error);\n          }, function () {\n            if (task.state === 'scheduled') {\n              task.invoke();\n            }\n\n            subscriber.complete();\n          });\n        });\n      } else {\n        return obs$;\n      }\n    }\n  }, {\n    key: \"runOutsideAngular\",\n    value: function runOutsideAngular(obs$) {\n      var _this2 = this;\n\n      return new Observable(function (subscriber) {\n        return _this2.zone.runOutsideAngular(function () {\n          return obs$.subscribe(function (value) {\n            return _this2.zone.run(function () {\n              return subscriber.next(value);\n            });\n          }, function (error) {\n            return _this2.zone.run(function () {\n              return subscriber.error(error);\n            });\n          }, function () {\n            return _this2.zone.run(function () {\n              return subscriber.complete();\n            });\n          });\n        });\n      });\n    }\n  }]);\n\n  return FirebaseZoneScheduler;\n}();\nvar noopFunctions = ['ngOnDestroy'];\nexport var ɵlazySDKProxy = function ɵlazySDKProxy(klass, observable, zone) {\n  return new Proxy(klass, {\n    get: function get(_, name) {\n      return zone.runOutsideAngular(function () {\n        if (klass[name]) {\n          return klass[name];\n        }\n\n        if (noopFunctions.includes(name)) {\n          return function () {};\n        }\n\n        var promise = observable.toPromise().then(function (mod) {\n          var ret = mod && mod[name];\n\n          if (typeof ret == 'function') {\n            return ret.bind(mod);\n          } else if (ret && ret.then) {\n            return ret.then(function (res) {\n              return zone.run(function () {\n                return res;\n              });\n            });\n          } else {\n            return zone.run(function () {\n              return ret;\n            });\n          }\n        });\n        return new Proxy(function () {\n          return undefined;\n        }, {\n          get: function get(_, name) {\n            return promise[name];\n          },\n          apply: function apply(self, _, args) {\n            return promise.then(function (it) {\n              return it && it.apply(void 0, _toConsumableArray(args));\n            });\n          }\n        });\n      });\n    }\n  });\n}; //# sourceMappingURL=angularfire2.js.map","map":{"version":3,"sources":["C:/Users/matia/Desktop/Proyecto/proyecto-agricola/node_modules/@angular/fire/es2015/angularfire2.js"],"names":["InjectionToken","isPlatformServer","Observable","queueScheduler","asyncScheduler","subscribeOn","observeOn","tap","RealtimeDatabaseURL","DATABASE_URL","noop","ɵZoneScheduler","zone","delegate","now","work","delay","state","targetZone","workInZone","runGuarded","apply","schedule","ɵBlockUntilFirstOperator","task","subscriber","source","unscheduleTask","bind","run","Zone","current","scheduleMacroTask","pipe","subscribe","add","invoke","ɵAngularFireSchedulers","ngZone","outsideAngular","runOutsideAngular","insideAngular","ɵkeepUnstableUntilFirstFactory","schedulers","platformId","keepUnstableUntilFirst","obs$","lift","runInZone","value","next","error","complete","FirebaseZoneScheduler","args","noopFunctions","ɵlazySDKProxy","klass","observable","Proxy","get","_","name","includes","promise","toPromise","then","mod","ret","res","undefined","self","it"],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\r\nimport { isPlatformServer } from '@angular/common';\r\nimport { Observable, queueScheduler, asyncScheduler } from 'rxjs';\r\nimport { subscribeOn, observeOn, tap } from 'rxjs/operators';\r\nexport const RealtimeDatabaseURL = new InjectionToken('angularfire2.realtimeDatabaseURL');\r\nexport const DATABASE_URL = RealtimeDatabaseURL;\r\nfunction noop() { }\r\nexport class ɵZoneScheduler {\r\n    constructor(zone, delegate = queueScheduler) {\r\n        this.zone = zone;\r\n        this.delegate = delegate;\r\n    }\r\n    now() {\r\n        return this.delegate.now();\r\n    }\r\n    schedule(work, delay, state) {\r\n        const targetZone = this.zone;\r\n        const workInZone = function (state) {\r\n            targetZone.runGuarded(() => {\r\n                work.apply(this, [state]);\r\n            });\r\n        };\r\n        return this.delegate.schedule(workInZone, delay, state);\r\n    }\r\n}\r\nexport class ɵBlockUntilFirstOperator {\r\n    constructor(zone) {\r\n        this.zone = zone;\r\n        this.task = null;\r\n    }\r\n    call(subscriber, source) {\r\n        const unscheduleTask = this.unscheduleTask.bind(this);\r\n        this.task = this.zone.run(() => Zone.current.scheduleMacroTask('firebaseZoneBlock', noop, {}, noop, noop));\r\n        return source.pipe(tap(unscheduleTask, unscheduleTask, unscheduleTask)).subscribe(subscriber).add(unscheduleTask);\r\n    }\r\n    unscheduleTask() {\r\n        if (this.task != null && this.task.state === 'scheduled') {\r\n            this.task.invoke();\r\n            this.task = null;\r\n        }\r\n    }\r\n}\r\nexport class ɵAngularFireSchedulers {\r\n    constructor(ngZone) {\r\n        this.ngZone = ngZone;\r\n        this.outsideAngular = ngZone.runOutsideAngular(() => new ɵZoneScheduler(Zone.current));\r\n        this.insideAngular = ngZone.run(() => new ɵZoneScheduler(Zone.current, asyncScheduler));\r\n    }\r\n}\r\nexport function ɵkeepUnstableUntilFirstFactory(schedulers, platformId) {\r\n    return function keepUnstableUntilFirst(obs$) {\r\n        if (isPlatformServer(platformId)) {\r\n            obs$ = obs$.lift(new ɵBlockUntilFirstOperator(schedulers.ngZone));\r\n        }\r\n        return obs$.pipe(subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular));\r\n    };\r\n}\r\nexport const runOutsideAngular = (zone) => (obs$) => {\r\n    return new Observable(subscriber => {\r\n        return zone.runOutsideAngular(() => {\r\n            runInZone(zone)(obs$).subscribe(subscriber);\r\n        });\r\n    });\r\n};\r\nexport const runInZone = (zone) => (obs$) => {\r\n    return new Observable(subscriber => {\r\n        return obs$.subscribe(value => zone.run(() => subscriber.next(value)), error => zone.run(() => subscriber.error(error)), () => zone.run(() => subscriber.complete()));\r\n    });\r\n};\r\nexport class FirebaseZoneScheduler {\r\n    constructor(zone, platformId) {\r\n        this.zone = zone;\r\n        this.platformId = platformId;\r\n    }\r\n    schedule(...args) {\r\n        return this.zone.runGuarded(function () { return queueScheduler.schedule.apply(queueScheduler, args); });\r\n    }\r\n    keepUnstableUntilFirst(obs$) {\r\n        if (isPlatformServer(this.platformId)) {\r\n            return new Observable(subscriber => {\r\n                const noop = () => { };\r\n                const task = Zone.current.scheduleMacroTask('firebaseZoneBlock', noop, {}, noop, noop);\r\n                obs$.subscribe(next => {\r\n                    if (task.state === 'scheduled') {\r\n                        task.invoke();\r\n                    }\r\n                    ;\r\n                    subscriber.next(next);\r\n                }, error => {\r\n                    if (task.state === 'scheduled') {\r\n                        task.invoke();\r\n                    }\r\n                    subscriber.error(error);\r\n                }, () => {\r\n                    if (task.state === 'scheduled') {\r\n                        task.invoke();\r\n                    }\r\n                    subscriber.complete();\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            return obs$;\r\n        }\r\n    }\r\n    runOutsideAngular(obs$) {\r\n        return new Observable(subscriber => {\r\n            return this.zone.runOutsideAngular(() => {\r\n                return obs$.subscribe(value => this.zone.run(() => subscriber.next(value)), error => this.zone.run(() => subscriber.error(error)), () => this.zone.run(() => subscriber.complete()));\r\n            });\r\n        });\r\n    }\r\n}\r\nconst noopFunctions = ['ngOnDestroy'];\r\nexport const ɵlazySDKProxy = (klass, observable, zone) => {\r\n    return new Proxy(klass, {\r\n        get: (_, name) => zone.runOutsideAngular(() => {\r\n            if (klass[name]) {\r\n                return klass[name];\r\n            }\r\n            if (noopFunctions.includes(name)) {\r\n                return () => { };\r\n            }\r\n            let promise = observable.toPromise().then(mod => {\r\n                const ret = mod && mod[name];\r\n                if (typeof ret == 'function') {\r\n                    return ret.bind(mod);\r\n                }\r\n                else if (ret && ret.then) {\r\n                    return ret.then((res) => zone.run(() => res));\r\n                }\r\n                else {\r\n                    return zone.run(() => ret);\r\n                }\r\n            });\r\n            return new Proxy(() => undefined, {\r\n                get: (_, name) => promise[name],\r\n                apply: (self, _, args) => promise.then(it => it && it(...args))\r\n            });\r\n        })\r\n    });\r\n};\r\n//# sourceMappingURL=angularfire2.js.map"]},"metadata":{},"sourceType":"module"}