{"ast":null,"code":"import _defineProperty from \"C:/Users/matia/Desktop/Proyecto/proyecto-agricola/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"C:/Users/matia/Desktop/Proyecto/proyecto-agricola/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:/Users/matia/Desktop/Proyecto/proyecto-agricola/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/matia/Desktop/Proyecto/proyecto-agricola/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { from } from 'rxjs';\nimport { fromCollectionRef } from '../observable/fromRef';\nimport { map, filter, scan, observeOn } from 'rxjs/operators';\nimport { docChanges, sortedChanges } from './changes';\nimport { AngularFirestoreDocument } from '../document/document';\nexport function validateEventsArray(events) {\n  if (!events || events.length === 0) {\n    events = ['added', 'removed', 'modified'];\n  }\n\n  return events;\n}\nexport var AngularFirestoreCollection = /*#__PURE__*/function () {\n  function AngularFirestoreCollection(ref, query, afs) {\n    _classCallCheck(this, AngularFirestoreCollection);\n\n    this.ref = ref;\n    this.query = query;\n    this.afs = afs;\n  }\n\n  _createClass(AngularFirestoreCollection, [{\n    key: \"stateChanges\",\n    value: function stateChanges(events) {\n      if (!events || events.length === 0) {\n        return docChanges(this.query, this.afs.schedulers.outsideAngular).pipe(this.afs.keepUnstableUntilFirst);\n      }\n\n      return docChanges(this.query, this.afs.schedulers.outsideAngular).pipe(this.afs.keepUnstableUntilFirst, map(function (actions) {\n        return actions.filter(function (change) {\n          return events.indexOf(change.type) > -1;\n        });\n      }), filter(function (changes) {\n        return changes.length > 0;\n      }));\n    }\n  }, {\n    key: \"auditTrail\",\n    value: function auditTrail(events) {\n      return this.stateChanges(events).pipe(scan(function (current, action) {\n        return [].concat(_toConsumableArray(current), _toConsumableArray(action));\n      }, []));\n    }\n  }, {\n    key: \"snapshotChanges\",\n    value: function snapshotChanges(events) {\n      var validatedEvents = validateEventsArray(events);\n      var scheduledSortedChanges$ = sortedChanges(this.query, validatedEvents, this.afs.schedulers.outsideAngular);\n      return scheduledSortedChanges$.pipe(this.afs.keepUnstableUntilFirst);\n    }\n  }, {\n    key: \"valueChanges\",\n    value: function valueChanges() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return fromCollectionRef(this.query, this.afs.schedulers.outsideAngular).pipe(this.afs.keepUnstableUntilFirst, map(function (actions) {\n        return actions.payload.docs.map(function (a) {\n          if (options.idField) {\n            return Object.assign({}, a.data(), _defineProperty({}, options.idField, a.id));\n          } else {\n            return a.data();\n          }\n        });\n      }));\n    }\n  }, {\n    key: \"get\",\n    value: function get(options) {\n      return from(this.query.get(options)).pipe(observeOn(this.afs.schedulers.insideAngular));\n    }\n  }, {\n    key: \"add\",\n    value: function add(data) {\n      return this.ref.add(data);\n    }\n  }, {\n    key: \"doc\",\n    value: function doc(path) {\n      return new AngularFirestoreDocument(this.ref.doc(path), this.afs);\n    }\n  }]);\n\n  return AngularFirestoreCollection;\n}(); //# sourceMappingURL=collection.js.map","map":{"version":3,"sources":["C:/Users/matia/Desktop/Proyecto/proyecto-agricola/node_modules/@angular/fire/firestore/es2015/collection/collection.js"],"names":["from","fromCollectionRef","map","filter","scan","observeOn","docChanges","sortedChanges","AngularFirestoreDocument","validateEventsArray","events","length","AngularFirestoreCollection","ref","query","afs","schedulers","outsideAngular","pipe","keepUnstableUntilFirst","actions","change","indexOf","type","changes","stateChanges","current","action","validatedEvents","scheduledSortedChanges$","options","payload","docs","a","idField","Object","assign","data","id","get","insideAngular","add","path","doc"],"mappings":"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","sourcesContent":["import { from } from 'rxjs';\r\nimport { fromCollectionRef } from '../observable/fromRef';\r\nimport { map, filter, scan, observeOn } from 'rxjs/operators';\r\nimport { docChanges, sortedChanges } from './changes';\r\nimport { AngularFirestoreDocument } from '../document/document';\r\nexport function validateEventsArray(events) {\r\n    if (!events || events.length === 0) {\r\n        events = ['added', 'removed', 'modified'];\r\n    }\r\n    return events;\r\n}\r\nexport class AngularFirestoreCollection {\r\n    constructor(ref, query, afs) {\r\n        this.ref = ref;\r\n        this.query = query;\r\n        this.afs = afs;\r\n    }\r\n    stateChanges(events) {\r\n        if (!events || events.length === 0) {\r\n            return docChanges(this.query, this.afs.schedulers.outsideAngular).pipe(this.afs.keepUnstableUntilFirst);\r\n        }\r\n        return docChanges(this.query, this.afs.schedulers.outsideAngular).pipe(this.afs.keepUnstableUntilFirst, map(actions => actions.filter(change => events.indexOf(change.type) > -1)), filter(changes => changes.length > 0));\r\n    }\r\n    auditTrail(events) {\r\n        return this.stateChanges(events).pipe(scan((current, action) => [...current, ...action], []));\r\n    }\r\n    snapshotChanges(events) {\r\n        const validatedEvents = validateEventsArray(events);\r\n        const scheduledSortedChanges$ = sortedChanges(this.query, validatedEvents, this.afs.schedulers.outsideAngular);\r\n        return scheduledSortedChanges$.pipe(this.afs.keepUnstableUntilFirst);\r\n    }\r\n    valueChanges(options = {}) {\r\n        return fromCollectionRef(this.query, this.afs.schedulers.outsideAngular)\r\n            .pipe(this.afs.keepUnstableUntilFirst, map(actions => actions.payload.docs.map(a => {\r\n            if (options.idField) {\r\n                return Object.assign({}, a.data(), { [options.idField]: a.id });\r\n            }\r\n            else {\r\n                return a.data();\r\n            }\r\n        })));\r\n    }\r\n    get(options) {\r\n        return from(this.query.get(options)).pipe(observeOn(this.afs.schedulers.insideAngular));\r\n    }\r\n    add(data) {\r\n        return this.ref.add(data);\r\n    }\r\n    doc(path) {\r\n        return new AngularFirestoreDocument(this.ref.doc(path), this.afs);\r\n    }\r\n}\r\n//# sourceMappingURL=collection.js.map"]},"metadata":{},"sourceType":"module"}