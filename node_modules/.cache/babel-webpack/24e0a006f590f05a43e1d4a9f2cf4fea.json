{"ast":null,"code":"import { fromCollectionRef } from '../observable/fromRef';\nimport { map, scan } from 'rxjs/operators';\nexport function docChanges(query, scheduler) {\n  return fromCollectionRef(query, scheduler).pipe(map(function (action) {\n    return action.payload.docChanges().map(function (change) {\n      return {\n        type: change.type,\n        payload: change\n      };\n    });\n  }));\n}\nexport function sortedChanges(query, events, scheduler) {\n  return fromCollectionRef(query, scheduler).pipe(map(function (changes) {\n    return changes.payload.docChanges();\n  }), scan(function (current, changes) {\n    return combineChanges(current, changes, events);\n  }, []), map(function (changes) {\n    return changes.map(function (c) {\n      return {\n        type: c.type,\n        payload: c\n      };\n    });\n  }));\n}\nexport function combineChanges(current, changes, events) {\n  changes.forEach(function (change) {\n    if (events.indexOf(change.type) > -1) {\n      current = combineChange(current, change);\n    }\n  });\n  return current;\n}\nexport function combineChange(combined, change) {\n  switch (change.type) {\n    case 'added':\n      if (combined[change.newIndex] && combined[change.newIndex].doc.ref.isEqual(change.doc.ref)) {} else {\n        combined.splice(change.newIndex, 0, change);\n      }\n\n      break;\n\n    case 'modified':\n      if (combined[change.oldIndex] == null || combined[change.oldIndex].doc.ref.isEqual(change.doc.ref)) {\n        if (change.oldIndex !== change.newIndex) {\n          combined.splice(change.oldIndex, 1);\n          combined.splice(change.newIndex, 0, change);\n        } else {\n          combined.splice(change.newIndex, 1, change);\n        }\n      }\n\n      break;\n\n    case 'removed':\n      if (combined[change.oldIndex] && combined[change.oldIndex].doc.ref.isEqual(change.doc.ref)) {\n        combined.splice(change.oldIndex, 1);\n      }\n\n      break;\n  }\n\n  return combined;\n} //# sourceMappingURL=changes.js.map","map":{"version":3,"sources":["C:/Users/matia/Desktop/Proyecto/proyecto-agricola/node_modules/@angular/fire/firestore/es2015/collection/changes.js"],"names":["fromCollectionRef","map","scan","docChanges","query","scheduler","pipe","action","payload","change","type","sortedChanges","events","changes","current","combineChanges","c","forEach","indexOf","combineChange","combined","newIndex","doc","ref","isEqual","splice","oldIndex"],"mappings":"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","sourcesContent":["import { fromCollectionRef } from '../observable/fromRef';\r\nimport { map, scan } from 'rxjs/operators';\r\nexport function docChanges(query, scheduler) {\r\n    return fromCollectionRef(query, scheduler)\r\n        .pipe(map(action => action.payload.docChanges()\r\n        .map(change => ({ type: change.type, payload: change }))));\r\n}\r\nexport function sortedChanges(query, events, scheduler) {\r\n    return fromCollectionRef(query, scheduler)\r\n        .pipe(map(changes => changes.payload.docChanges()), scan((current, changes) => combineChanges(current, changes, events), []), map(changes => changes.map(c => ({ type: c.type, payload: c }))));\r\n}\r\nexport function combineChanges(current, changes, events) {\r\n    changes.forEach(change => {\r\n        if (events.indexOf(change.type) > -1) {\r\n            current = combineChange(current, change);\r\n        }\r\n    });\r\n    return current;\r\n}\r\nexport function combineChange(combined, change) {\r\n    switch (change.type) {\r\n        case 'added':\r\n            if (combined[change.newIndex] && combined[change.newIndex].doc.ref.isEqual(change.doc.ref)) {\r\n            }\r\n            else {\r\n                combined.splice(change.newIndex, 0, change);\r\n            }\r\n            break;\r\n        case 'modified':\r\n            if (combined[change.oldIndex] == null || combined[change.oldIndex].doc.ref.isEqual(change.doc.ref)) {\r\n                if (change.oldIndex !== change.newIndex) {\r\n                    combined.splice(change.oldIndex, 1);\r\n                    combined.splice(change.newIndex, 0, change);\r\n                }\r\n                else {\r\n                    combined.splice(change.newIndex, 1, change);\r\n                }\r\n            }\r\n            break;\r\n        case 'removed':\r\n            if (combined[change.oldIndex] && combined[change.oldIndex].doc.ref.isEqual(change.doc.ref)) {\r\n                combined.splice(change.oldIndex, 1);\r\n            }\r\n            break;\r\n    }\r\n    return combined;\r\n}\r\n//# sourceMappingURL=changes.js.map"]},"metadata":{},"sourceType":"module"}